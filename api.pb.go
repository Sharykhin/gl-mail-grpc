// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api.proto

/*
Package api is a generated protocol buffer package.

It is generated from these files:
	api.proto

It has these top-level messages:
	FailMailRequest
	FailMailResponse
	FailMailEntity
	FailMailFilter
*/
package api

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Request message for creating a new fail mail
type FailMailRequest struct {
	Action  string `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	Payload []byte `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
	Reason  string `protobuf:"bytes,3,opt,name=reason" json:"reason,omitempty"`
}

func (m *FailMailRequest) Reset()                    { *m = FailMailRequest{} }
func (m *FailMailRequest) String() string            { return proto.CompactTextString(m) }
func (*FailMailRequest) ProtoMessage()               {}
func (*FailMailRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *FailMailRequest) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *FailMailRequest) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *FailMailRequest) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

// Response of fail mail
type FailMailResponse struct {
	ID        int64  `protobuf:"varint,1,opt,name=ID" json:"ID,omitempty"`
	Action    string `protobuf:"bytes,2,opt,name=action" json:"action,omitempty"`
	Payload   []byte `protobuf:"bytes,3,opt,name=payload,proto3" json:"payload,omitempty"`
	Reason    string `protobuf:"bytes,4,opt,name=reason" json:"reason,omitempty"`
	CreatedAt string `protobuf:"bytes,5,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
	DeletedAt string `protobuf:"bytes,6,opt,name=deleted_at,json=deletedAt" json:"deleted_at,omitempty"`
}

func (m *FailMailResponse) Reset()                    { *m = FailMailResponse{} }
func (m *FailMailResponse) String() string            { return proto.CompactTextString(m) }
func (*FailMailResponse) ProtoMessage()               {}
func (*FailMailResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *FailMailResponse) GetID() int64 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *FailMailResponse) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *FailMailResponse) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *FailMailResponse) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

func (m *FailMailResponse) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

func (m *FailMailResponse) GetDeletedAt() string {
	if m != nil {
		return m.DeletedAt
	}
	return ""
}

type FailMailEntity struct {
	ID        int64  `protobuf:"varint,1,opt,name=ID" json:"ID,omitempty"`
	Action    string `protobuf:"bytes,2,opt,name=action" json:"action,omitempty"`
	Payload   []byte `protobuf:"bytes,3,opt,name=payload,proto3" json:"payload,omitempty"`
	Reason    string `protobuf:"bytes,4,opt,name=reason" json:"reason,omitempty"`
	CreatedAt string `protobuf:"bytes,5,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
	DeletedAt string `protobuf:"bytes,6,opt,name=deleted_at,json=deletedAt" json:"deleted_at,omitempty"`
}

func (m *FailMailEntity) Reset()                    { *m = FailMailEntity{} }
func (m *FailMailEntity) String() string            { return proto.CompactTextString(m) }
func (*FailMailEntity) ProtoMessage()               {}
func (*FailMailEntity) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *FailMailEntity) GetID() int64 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *FailMailEntity) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *FailMailEntity) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *FailMailEntity) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

func (m *FailMailEntity) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

func (m *FailMailEntity) GetDeletedAt() string {
	if m != nil {
		return m.DeletedAt
	}
	return ""
}

// Filter for streaming fail mails
type FailMailFilter struct {
	Limit  int64 `protobuf:"varint,1,opt,name=limit" json:"limit,omitempty"`
	Offset int64 `protobuf:"varint,2,opt,name=offset" json:"offset,omitempty"`
}

func (m *FailMailFilter) Reset()                    { *m = FailMailFilter{} }
func (m *FailMailFilter) String() string            { return proto.CompactTextString(m) }
func (*FailMailFilter) ProtoMessage()               {}
func (*FailMailFilter) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *FailMailFilter) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *FailMailFilter) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func init() {
	proto.RegisterType((*FailMailRequest)(nil), "api.FailMailRequest")
	proto.RegisterType((*FailMailResponse)(nil), "api.FailMailResponse")
	proto.RegisterType((*FailMailEntity)(nil), "api.FailMailEntity")
	proto.RegisterType((*FailMailFilter)(nil), "api.FailMailFilter")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for FailMail service

type FailMailClient interface {
	CreateFailMail(ctx context.Context, in *FailMailRequest, opts ...grpc.CallOption) (*FailMailResponse, error)
	GetFailMails(ctx context.Context, in *FailMailFilter, opts ...grpc.CallOption) (FailMail_GetFailMailsClient, error)
}

type failMailClient struct {
	cc *grpc.ClientConn
}

func NewFailMailClient(cc *grpc.ClientConn) FailMailClient {
	return &failMailClient{cc}
}

func (c *failMailClient) CreateFailMail(ctx context.Context, in *FailMailRequest, opts ...grpc.CallOption) (*FailMailResponse, error) {
	out := new(FailMailResponse)
	err := grpc.Invoke(ctx, "/api.FailMail/CreateFailMail", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *failMailClient) GetFailMails(ctx context.Context, in *FailMailFilter, opts ...grpc.CallOption) (FailMail_GetFailMailsClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_FailMail_serviceDesc.Streams[0], c.cc, "/api.FailMail/GetFailMails", opts...)
	if err != nil {
		return nil, err
	}
	x := &failMailGetFailMailsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type FailMail_GetFailMailsClient interface {
	Recv() (*FailMailEntity, error)
	grpc.ClientStream
}

type failMailGetFailMailsClient struct {
	grpc.ClientStream
}

func (x *failMailGetFailMailsClient) Recv() (*FailMailEntity, error) {
	m := new(FailMailEntity)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for FailMail service

type FailMailServer interface {
	CreateFailMail(context.Context, *FailMailRequest) (*FailMailResponse, error)
	GetFailMails(*FailMailFilter, FailMail_GetFailMailsServer) error
}

func RegisterFailMailServer(s *grpc.Server, srv FailMailServer) {
	s.RegisterService(&_FailMail_serviceDesc, srv)
}

func _FailMail_CreateFailMail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FailMailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FailMailServer).CreateFailMail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.FailMail/CreateFailMail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FailMailServer).CreateFailMail(ctx, req.(*FailMailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FailMail_GetFailMails_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(FailMailFilter)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(FailMailServer).GetFailMails(m, &failMailGetFailMailsServer{stream})
}

type FailMail_GetFailMailsServer interface {
	Send(*FailMailEntity) error
	grpc.ServerStream
}

type failMailGetFailMailsServer struct {
	grpc.ServerStream
}

func (x *failMailGetFailMailsServer) Send(m *FailMailEntity) error {
	return x.ServerStream.SendMsg(m)
}

var _FailMail_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.FailMail",
	HandlerType: (*FailMailServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateFailMail",
			Handler:    _FailMail_CreateFailMail_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetFailMails",
			Handler:       _FailMail_GetFailMails_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "api.proto",
}

func init() { proto.RegisterFile("api.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 295 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x92, 0x4f, 0x4b, 0xc3, 0x40,
	0x10, 0xc5, 0xbb, 0x89, 0x8d, 0x66, 0x28, 0x51, 0xd6, 0x2a, 0xa1, 0x20, 0x94, 0x9c, 0x7a, 0x2a,
	0xa2, 0x57, 0x51, 0x8a, 0xb5, 0xd2, 0x83, 0x97, 0x5c, 0x3d, 0xc8, 0xda, 0x4c, 0x61, 0x61, 0xcd,
	0xc6, 0xec, 0x78, 0xe8, 0x47, 0xf0, 0x9b, 0x88, 0x9f, 0x52, 0xb2, 0xbb, 0xb1, 0x7f, 0xa0, 0xf7,
	0x1e, 0xdf, 0x7b, 0x99, 0x79, 0x3f, 0xb2, 0x03, 0xb1, 0xa8, 0xe4, 0xb8, 0xaa, 0x35, 0x69, 0x1e,
	0x8a, 0x4a, 0x66, 0xaf, 0x70, 0x3a, 0x13, 0x52, 0xbd, 0x08, 0xa9, 0x72, 0xfc, 0xfc, 0x42, 0x43,
	0xfc, 0x12, 0x22, 0xb1, 0x20, 0xa9, 0xcb, 0x94, 0x0d, 0xd9, 0x28, 0xce, 0xbd, 0xe2, 0x29, 0x1c,
	0x57, 0x62, 0xa5, 0xb4, 0x28, 0xd2, 0x60, 0xc8, 0x46, 0xbd, 0xbc, 0x95, 0xcd, 0x44, 0x8d, 0xc2,
	0xe8, 0x32, 0x0d, 0xdd, 0x84, 0x53, 0xd9, 0x2f, 0x83, 0xb3, 0xf5, 0x76, 0x53, 0xe9, 0xd2, 0x20,
	0x4f, 0x20, 0x98, 0x4f, 0xed, 0xea, 0x30, 0x0f, 0xe6, 0xd3, 0x8d, 0xba, 0x60, 0x5f, 0x5d, 0xb8,
	0xaf, 0xee, 0x68, 0xb3, 0x8e, 0x5f, 0x01, 0x2c, 0x6a, 0x14, 0x84, 0xc5, 0x9b, 0xa0, 0xb4, 0x6b,
	0xb3, 0xd8, 0x3b, 0x13, 0x6a, 0xe2, 0x02, 0x15, 0xfa, 0x38, 0x72, 0xb1, 0x77, 0x26, 0x94, 0xfd,
	0x30, 0x48, 0x5a, 0xd8, 0xa7, 0x92, 0x24, 0xad, 0x0e, 0x16, 0xf5, 0x7e, 0x4d, 0x3a, 0x93, 0x8a,
	0xb0, 0xe6, 0x7d, 0xe8, 0x2a, 0xf9, 0x21, 0xc9, 0xc3, 0x3a, 0xd1, 0xb4, 0xeb, 0xe5, 0xd2, 0x20,
	0x59, 0xde, 0x30, 0xf7, 0xea, 0xe6, 0x9b, 0xc1, 0x49, 0xbb, 0x80, 0x3f, 0x40, 0xf2, 0x68, 0x8b,
	0xff, 0x9d, 0xfe, 0xb8, 0x39, 0x92, 0x9d, 0xb3, 0x18, 0x5c, 0xec, 0xb8, 0xee, 0x39, 0xb3, 0x0e,
	0xbf, 0x83, 0xde, 0x33, 0x52, 0x1b, 0x18, 0x7e, 0xbe, 0xf5, 0xa1, 0x03, 0x1c, 0x6c, 0x9b, 0xee,
	0xff, 0x66, 0x9d, 0x6b, 0xf6, 0x1e, 0xd9, 0x63, 0xbc, 0xfd, 0x0b, 0x00, 0x00, 0xff, 0xff, 0xbb,
	0x37, 0x97, 0x5e, 0x99, 0x02, 0x00, 0x00,
}
